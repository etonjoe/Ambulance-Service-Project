
```sql
-- Basic Queries

-- 1.1. Get all available ambulances
-- This query retrieves all ambulances that are currently available for service.
SELECT * 
FROM Ambulances
WHERE Status = 'Available';
GO

-- 1.2. List all patients with their medical history
-- This query retrieves a list of all patients and their medical history.
SELECT FirstName, LastName, MedicalHistory
FROM Patients;
GO

-- 1.3. Find staff members who are paramedics
-- This query returns a list of all staff who are paramedics.
SELECT FirstName, LastName, Role
FROM Staff
WHERE Role = 'Paramedic';
GO

-- 1.4. List all incidents with their current status
-- This query lists all incidents, including the current status (Active or Resolved).
SELECT Description, Status
FROM Incidents;
GO

-- 1.5. Get all emergency calls that are critical
-- This query retrieves all emergency calls marked as "Critical".
SELECT CallID, Location, Severity, CallType
FROM EmergencyCalls
WHERE Severity = 'Critical';
GO

-- Advanced Queries

-- 2.1. Get the average response time for all dispatched ambulances
-- This query calculates the average response time for all dispatched ambulances (difference between dispatch and arrival times).
SELECT AVG(DATEDIFF(MINUTE, DispatchTime, ArrivalTime)) AS AverageResponseTime
FROM Dispatches;
GO

-- 2.2. Find the top 5 most common emergency call types
-- This query identifies the top 5 most common emergency call types based on the frequency of calls.
SELECT TOP 5 CallType, COUNT(*) AS CallFrequency
FROM EmergencyCalls
GROUP BY CallType
ORDER BY CallFrequency DESC;
GO

-- 2.3. Get a list of all active incidents along with the ambulance dispatched to each
-- This query provides a list of all active incidents and the ambulance dispatched to each incident.
SELECT i.Description, i.Status, a.LicensePlate, d.DispatchTime
FROM Incidents i
JOIN EmergencyCalls ec ON i.IncidentID = ec.IncidentID
JOIN Dispatches d ON ec.CallID = d.CallID
JOIN Ambulances a ON d.AmbulanceID = a.AmbulanceID
WHERE i.Status = 'Active';
GO

-- 2.4. Get a report of total calls received by severity and call type
-- This query shows the total number of emergency calls grouped by severity and call type.
SELECT Severity, CallType, COUNT(*) AS TotalCalls
FROM EmergencyCalls
GROUP BY Severity, CallType
ORDER BY TotalCalls DESC;
GO

-- 2.5. Retrieve the ambulance and staff that handled the most emergency calls
-- This query returns the ambulance and staff who responded to the most calls.
SELECT a.LicensePlate, s.FirstName + ' ' + s.LastName AS StaffName, COUNT(*) AS TotalCallsHandled
FROM Dispatches d
JOIN Ambulances a ON d.AmbulanceID = a.AmbulanceID
JOIN Staff s ON d.StaffID = s.StaffID
GROUP BY a.LicensePlate, s.FirstName, s.LastName
ORDER BY TotalCallsHandled DESC
LIMIT 1;
GO

-- Statistical Queries

-- 3.1. Get the distribution of call severities (how many calls are critical, urgent, etc.)
-- This query shows how many calls were received for each severity level.
SELECT Severity, COUNT(*) AS CallCount
FROM EmergencyCalls
GROUP BY Severity;
GO

-- 3.2. Calculate the total number of active incidents in the last 24 hours
-- This query calculates how many active incidents have occurred in the past 24 hours.
SELECT COUNT(*) AS ActiveIncidentsLast24Hours
FROM Incidents
WHERE Status = 'Active' AND IncidentTime > DATEADD(HOUR, -24, GETDATE());
GO

-- 3.3. Find the average number of patients per emergency call
-- This query calculates the average number of patients per emergency call, assuming one patient per call (or you could join with the Patients table if more patients are involved).
SELECT AVG(COUNT(p.PatientID)) AS AveragePatientsPerCall
FROM EmergencyCalls ec
JOIN Patients p ON ec.PatientID = p.PatientID
GROUP BY ec.CallID;
GO

-- 3.4. Identify the time of day with the highest number of emergency calls
-- This query identifies the hour of the day when the ambulance service receives the most emergency calls.
SELECT DATEPART(HOUR, CallTime) AS CallHour, COUNT(*) AS CallsReceived
FROM EmergencyCalls
GROUP BY DATEPART(HOUR, CallTime)
ORDER BY CallsReceived DESC
LIMIT 1;
GO

-- 3.5. Get the total number of dispatched ambulances per day over the past month
-- This query calculates the number of ambulances dispatched per day for the last 30 days.
SELECT CAST(DispatchTime AS DATE) AS DispatchDate, COUNT(*) AS DispatchedAmbulances
FROM Dispatches
WHERE DispatchTime > DATEADD(DAY, -30, GETDATE())
GROUP BY CAST(DispatchTime AS DATE)
ORDER BY DispatchDate;
GO

-- Real-Life Problem Solving Examples

-- 4.1. How many ambulances are currently available for service and how many are in service?
-- This query returns the number of available and in-service ambulances.
SELECT 
    SUM(CASE WHEN Status = 'Available' THEN 1 ELSE 0 END) AS Available_Ambulances,
    SUM(CASE WHEN Status = 'In Service' THEN 1 ELSE 0 END) AS InService_Ambulances
FROM Ambulances;
GO

-- 4.2. Get the most frequent locations for emergency calls
-- This query shows the most common locations for emergency calls, which can help in resource allocation.
SELECT Location, COUNT(*) AS CallCount
FROM EmergencyCalls
GROUP BY Location
ORDER BY CallCount DESC;
GO

-- 4.3. Track the number of patients with a specific medical condition
-- This query tracks how many patients have a specific medical condition mentioned in their medical history (for example, "Cardiac Arrest").
SELECT COUNT(*) AS PatientsWithCardiacArrest
FROM Patients
WHERE MedicalHistory LIKE '%Cardiac Arrest%';
GO

-- 4.4. Find how long it takes, on average, from receiving a call to dispatching an ambulance
-- This query calculates the average time from the emergency call being received to the ambulance being dispatched.
SELECT AVG(DATEDIFF(MINUTE, ec.CallTime, d.DispatchTime)) AS AvgCallToDispatchTime
FROM EmergencyCalls ec
JOIN Dispatches d ON ec.CallID = d.CallID;
GO
```
